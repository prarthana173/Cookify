import os
import requests
from flask import Flask, request, jsonify
from dotenv import load_dotenv
from flask_cors import CORS


load_dotenv()
API_KEY = os.getenv('SPOONACULAR_API_KEY')
if not API_KEY:
raise ValueError('Please set SPOONACULAR_API_KEY in .env')


app = Flask(__name__)
CORS(app)


SPOON_BASE = 'https://api.spoonacular.com'


def find_by_ingredients(ingredients, number=10):
url = f"{SPOON_BASE}/recipes/findByIngredients"
params = {
'apiKey': API_KEY,
'ingredients': ','.join(ingredients),
'number': number,
'ignorePantry': True
}
r = requests.get(url, params=params, timeout=10)
r.raise_for_status()
return r.json()


def get_recipe_info(recipe_id):
url = f"{SPOON_BASE}/recipes/{recipe_id}/information"
params = {'apiKey': API_KEY, 'includeNutrition': False}
r = requests.get(url, params=params, timeout=10)
r.raise_for_status()
return r.json()


@app.route('/search', methods=['POST'])
def search_recipes():
data = request.get_json()
ingredients_raw = data.get('ingredients', '')
diet_filter = data.get('diet', 'both') # veg, nonveg, or both
max_results = data.get('max_results', 12)


ingredients = [i.strip().lower() for i in ingredients_raw.split(',') if i.strip()]
if not ingredients:
return jsonify({'error': 'No ingredients provided'}), 400


candidates = find_by_ingredients(ingredients, number=max_results)


results = []
for c in candidates:
used_count = c.get('usedIngredientCount', 0)
missed_count = c.get('missedIngredientCount', 0)
missed = [m['name'] for m in c.get('missedIngredients', [])]
info = get_recipe_info(c['id'])
is_veg = info.get('vegetarian', False)


# Filter according to user selection
if diet_filter == 'veg' and not is_veg:
continue
if diet_filter == 'nonveg' and is_veg:
continue


results.append({
app.run(debug=True, port=5000)
